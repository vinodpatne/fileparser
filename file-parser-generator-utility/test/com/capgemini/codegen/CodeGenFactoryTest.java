package com.capgemini.codegen;

import junit.framework.TestCase;

import com.mc.utils.codegen.CodeGenFactory;
import com.mc.utils.codegen.structure.AnnotationMetaData;
import com.mc.utils.codegen.structure.AnnotationParameter;
import com.mc.utils.codegen.structure.ClassMetaData;
import com.mc.utils.codegen.structure.MemberMetaData;
import com.sun.codemodel.JCodeModel;
import com.sun.codemodel.JType;

public class CodeGenFactoryTest extends TestCase {

    private static final String PACKAGE_NAME = "com.capgemini.payments.domainobjects";

    private static final String OUTPUT_DIRECTORY = "output";

    public static void main1(String[] args) throws Exception {
        JCodeModel jCodeModel = new JCodeModel();

        JType type1 = jCodeModel.parseType("short");
        System.out.println(type1.toString() + "-" + type1.isPrimitive());
        JType type2 = jCodeModel.parseType("int");
        System.out.println(type2.toString() + "-" + type2.isPrimitive());
        JType type3 = jCodeModel.parseType("long");
        System.out.println(type3.toString() + "-" + type3.isPrimitive());
        JType type4 = jCodeModel.parseType("char");
        System.out.println(type4.toString() + "-" + type4.isPrimitive());
        JType type5 = jCodeModel.parseType("boolean");
        System.out.println(type5.toString() + "-" + type5.isPrimitive());
        JType type6 = jCodeModel.parseType("double");
        System.out.println(type6.toString() + "-" + type6.isPrimitive());
        JType type7 = jCodeModel.parseType("float");
        System.out.println(type7.toString() + "-" + type7.isPrimitive());
        JType type8 = jCodeModel.parseType("String");
        System.out.println(type8.toString() + "-" + type8.isPrimitive());
        JType type9 = jCodeModel.parseType("Short");
        System.out.println(type9.toString() + "-" + type9.isPrimitive());
        JType type10 = jCodeModel.parseType("Integer");
        System.out.println(type10.toString() + "-" + type10.isPrimitive());
        JType type11 = jCodeModel.parseType("Long");
        System.out.println(type11.toString() + "-" + type11.isPrimitive());
        JType type12 = jCodeModel.parseType("Date");
        System.out.println(type12.toString() + "-" + type12.isPrimitive());
        JType type13 = jCodeModel.parseType("Character");
        System.out.println(type13.toString() + "-" + type13.isPrimitive());
        JType type14 = jCodeModel.parseType("Boolean");
        System.out.println(type14.toString() + "-" + type14.isPrimitive());
        JType type15 = jCodeModel.parseType("Double");
        System.out.println(type15.toString() + "-" + type15.isPrimitive());
        JType type16 = jCodeModel.parseType("Float");
        System.out.println(type16.toString() + "-" + type16.isPrimitive());
        JType type17 = jCodeModel.parseType("BigDecimal");
        System.out.println(type17.toString() + "-" + type17.isPrimitive());

    }

    public static void main(String[] args) throws Exception {
        String className = "Person";
        ClassMetaData classMetaData = new ClassMetaData();
        classMetaData.setPackageName(PACKAGE_NAME);
        classMetaData.setClassName(className);
        classMetaData.setJavaDocs("This class is generated by Vinod.");

        AnnotationMetaData annotationMetaData = new AnnotationMetaData();
        annotationMetaData.setMainAnnotationClass("org.junit.runner.RunWith");
        annotationMetaData.addAnnotationParameter(new AnnotationParameter("value", "com.solstoneplus.global.guice.GuiceJUnitRunner", true));
//        AnnotationParameter 

        classMetaData.addAnnotationMetaData(annotationMetaData);

        MemberMetaData memberMetaData = new MemberMetaData();
        memberMetaData.setMemberName("age");
        memberMetaData.setDataType("float");
        memberMetaData.setDefaultLiteralValue("15");
        memberMetaData.setJavaDocs("Field Name member");
        memberMetaData.setRequireGetterSetterMethods(true);

        classMetaData.addMemberMetaData(memberMetaData);

        MemberMetaData memberMetaData1 = new MemberMetaData();
        memberMetaData1.setMemberName("dob");
        memberMetaData1.setDataType("java.util.Date");
        memberMetaData1.setJavaDocs("Date of Birth");
        memberMetaData1.setRequireGetterSetterMethods(true);
        
        classMetaData.addMemberMetaData(memberMetaData1);

        JCodeModel codeModel = CodeGenFactory.createClass(classMetaData);

        CodeGenFactory.writeCodeModel(codeModel, OUTPUT_DIRECTORY);
    }

}
